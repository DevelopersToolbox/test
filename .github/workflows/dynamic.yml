name: dynamic
on: 
  push:

jobs:
  create-matrices:
    runs-on: ubuntu-latest
    outputs:
      alpine-versions: ${{steps.alpine.outputs.alpine-versions}}
      debian-versions: ${{steps.debian.outputs.debian-versions}}
    steps:
      - uses: actions/checkout@v2
      - id: alpine
        run: echo "::set-output name=alpine-versions::$(ls Dockerfiles/alpine|sort -n|jq -cnR '[inputs | select(length>0)]')"
      - id: debian
        run: echo "::set-output name=debian-versions::$(ls Dockerfiles/debian|sort -n|jq -cnR '[inputs | select(length>0)]')"
  alpine:
    runs-on: ubuntu-latest
    needs: create-matrices
    strategy:
      fail-fast: false
      matrix:
        version: ${{fromJson(needs.create-matrices.outputs.alpine-versions)}}
    name: Build Test on Alpine Linux ${{ matrix.version }}
    steps:
      - run: echo ${{ matrix.version }}
  debian:
    runs-on: ubuntu-latest
    needs: create-matrices
    strategy:
      fail-fast: false
      matrix:
        version: ${{fromJson(needs.create-matrices.outputs.debian-versions)}}
    name: Build Test on Debian ${{ matrix.version }}
    steps:
      - name: Build Test on Debian ${{ matrix.version }}
        run: echo ${{ matrix.version }}
  slack-workflow-status:
    if: always()
    name: Slack Post Workflow Notification
    needs:
      - alpine
      - debian
    runs-on: ubuntu-latest
    steps:
      - name: Slack Post Workflow Notification
        uses: Gamesight/slack-workflow-status@master
        with:
          include_jobs: true
          repo_token: ${{secrets.GITHUB_TOKEN}}
          slack_webhook_url: ${{secrets.SLACK_WEBHOOK_URL}}
